apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.github.alexdochioiu.androidnews"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation core.kotlin.jdk
    implementation core.kotlin.coroutines
    implementation core.lifecycle_extension

    implementation ktx.core
    implementation ktx.lifecycle
    implementation ktx.fragment
    implementation ktx.navigation.common
    implementation ktx.navigation.runtime
    implementation ktx.navigation.fragment
    implementation ktx.navigation.ui

    implementation ui.support_appcompat
    implementation ui.constraint_layout
    implementation ui.material
    implementation ui.recyclerview
    implementation ui.cardview
    implementation ui.circleimageview

    implementation networkingDependencies.glide

    implementation loggingDependency.timber

    implementation dependencyInjection.dagger2.annotation
    kapt dependencyInjection.dagger2.processor

    implementation project (":news")

    testImplementation testDependencies.junit
    testImplementation testDependencies.runner
    testImplementation testDependencies.espresso
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlin.Experimental"]
}